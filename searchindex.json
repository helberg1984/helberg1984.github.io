{"categories":[{"title":"WEB","uri":"https://helberg1984.github.io/categories/web/"},{"title":"政治学习","uri":"https://helberg1984.github.io/categories/%E6%94%BF%E6%B2%BB%E5%AD%A6%E4%B9%A0/"},{"title":"计算机","uri":"https://helberg1984.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"title":"音乐学习","uri":"https://helberg1984.github.io/categories/%E9%9F%B3%E4%B9%90%E5%AD%A6%E4%B9%A0/"}],"posts":[{"content":"HTML要点  \u0026lt;p\u0026gt;我的\u0026lt;strong\u0026gt;猫咪\u0026lt;/stong\u0026gt;火爆脾气\u0026lt;/p\u0026gt;\n  开始标签（Opening tag） 结束标签（Closing tag） 内容（Content） 元素（Element） 属性（Attribute）   \u0026lt;img src=\u0026quot;images/firefox-icon.png\u0026quot; alt=\u0026quot;测试图片\u0026quot;\u0026gt;\n  地址属性alt，在所在位置潜入图像。 替换文字属性alt，图像的描述内容，当图像不能被用户看见的时候显示。  Markdown   （`）反引号,将单词或者短语表达为代码。\n  （``），表示为代码的单词或短语中包含一个或者多个反引号，则可以用双反引号将其包裹起来。\n  创建代码块，将代码块的每一行缩进至少四个空格或者一个制表符号。（hugo中实测要两个制表符号）\n html asd = 1    分割线表示法：***，\u0026mdash;，___。分割线的前后均添加空白行。\n  链接语法：[超链接显示名字](超链接地址\u0026quot;超链接title\u0026quot;)\n  转义符号\\\n  段落创建：使用空白行或者多行，不要使用空格或制表符缩进段落。\n  强调：**文字**\n  ","id":0,"section":"posts","summary":"HTML要点 \u0026lt;p\u0026gt;我的\u0026lt;strong\u0026gt;猫咪\u0026lt;/stong\u0026gt;火爆脾气\u0026lt;/p\u0026gt; 开始标签（Open","tags":["Markdown","Css","Html","Javascript"],"title":"WEB开发学习记录","uri":"https://helberg1984.github.io/2022/01/web%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","year":"2022"},{"content":"这两天用hugo在github上搭建个人博客踩了不少坑，其中之一就是博客在本地电脑环境运行正常显示，但是部署到github上就版面错乱，CSS失效没反应的问题，网上很多博客说要更改设置页的choose themes选项，但是我压根儿在仓库设置里面没有找到这个选项。查了很多资料才发现，原来很简单。只需要按照如下设置即可解决这个问题，特此记录。\n检查hugo网站生成源代码中config.toml文件， 打开后把这个 baseurl = \u0026ldquo;https://www.example.com/\u0026quot; 双引号里面内容换成具体的博客网址，就可以解决CSS失效的问题。\n","id":1,"section":"posts","summary":"这两天用hugo在github上搭建个人博客踩了不少坑，其中之一就是博客在本地电脑环境运行正常显示，但是部署到github上就版面错乱，CS","tags":["深坑"],"title":"hugo部署到github_page时候CSS失效，版面错乱的解决办法","uri":"https://helberg1984.github.io/2022/01/github_page%E7%89%88%E9%9D%A2%E9%94%99%E4%B9%B1/","year":"2022"},{"content":" 评论模块要加 serverURLs: \u0026lsquo;{{- $comment.valine.serverURLs }}\u0026rsquo;\n  配置文件要加 serverURLs: https://aakkbxtv.api.lncldglobal.com\n 要用最新的\u0026lt;script src=\u0026quot;//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\n\u0026lt;script src=\u0026quot;//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; #这条变化了 \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/valine\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; var GUEST = ['nick', 'mail', 'link']; var meta = '{{- $comment.valine.meta }}'; meta = meta.split(',').filter(function (item) { return GUEST.indexOf(item) \u0026gt; -1; }); new Valine({ el: '#vcomments', verify: {{- $comment.valine.verify }}, notify: {{- $comment.valine.notify }}, appId: '{{- $comment.valine.appid }}', appKey: '{{- $comment.valine.appkey }}', placeholder: '{{- $comment.valine.placeholder }}', avatar: '{{- $comment.valine.avatar }}', meta: meta, pageSize: '{{- $comment.valine.pageSize }}' || 10, visitor: {{- $comment.valine.visitor }}, serverURLs: '{{- $comment.valine.serverURLs }}' }); \u0026lt;/script\u0026gt;  这是一段测试的话。 这是第二段测试的话。\n友情链接：https://blog.csdn.net/hubojing/article/details/121770387\n","id":2,"section":"posts","summary":"评论模块要加 serverURLs: \u0026lsquo;{{- $comment.valine.serverURLs }}\u0026rsquo; 配置文件要加 serverURLs: https://aakkbxtv.api.lncldglobal.com 要用最新的\u0026lt;script src=\u0026quot;//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; #这条变化了 \u0026lt;script src=\u0026quot;https://cdn.jsdelivr.net/npm/valine\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; var GUEST = ['nick', 'mail', 'link']; var meta = '{{- $comment.valine.meta }}'; meta = meta.split(',').filter(function (item) { return GUEST.indexOf(item) \u0026gt; -1; }); new Valine({","tags":["深坑"],"title":"valine点击提交后无反应，learncloud后台无数据","uri":"https://helberg1984.github.io/2022/01/valine%E7%82%B9%E5%87%BB%E6%8F%90%E4%BA%A4%E6%97%A0%E5%8F%8D%E5%BA%94/","year":"2022"},{"content":"大家好，2022年即将到来。我在北京向大家致以新年祝福！\n回首这一年，意义非凡。我们亲历了党和国家历史上具有里程碑意义的大事。“两个一百年”奋斗目标历史交汇，我们开启了全面建设社会主义现代化国家新征程，正昂首阔步行进在实现中华民族伟大复兴的道路上。\n从年头到年尾，农田、企业、社区、学校、医院、军营、科研院所……大家忙了一整年，付出了，奉献了，也收获了。在飞逝的时光里，我们看到的、感悟到的中国，是一个坚韧不拔、欣欣向荣的中国。这里有可亲可敬的人民，有日新月异的发展，有赓续传承的事业。\n七月一日，我们隆重庆祝中国共产党成立一百周年。站在天安门城楼上感慨系之，历史征程风云激荡，中国共产党人带领亿万人民经千难而百折不挠、历万险而矢志不渝，成就了百年大党的恢宏气象。不忘初心，方得始终。我们唯有踔厉奋发、笃行不怠，方能不负历史、不负时代、不负人民。\n党的十九届六中全会通过了党的第三个历史决议。百年成就使人振奋，百年经验给人启迪。我曾谈到当年毛主席与黄炎培先生的“窑洞对”，我们只有勇于自我革命才能赢得历史主动。中华民族伟大复兴绝不是轻轻松松、敲锣打鼓就能实现的，也绝不是一马平川、朝夕之间就能到达的。我们要常怀远虑、居安思危，保持战略定力和耐心，“致广大而尽精微”。\n大国之大，也有大国之重。千头万绪的事，说到底是千家万户的事。我调研了一些地方，看了听了不少情况，很有启发和收获。每到群众家中，常会问一问，还有什么困难，父老乡亲的话我都记在心里。\n民之所忧，我必念之；民之所盼，我必行之。我也是从农村出来的，对贫困有着切身感受。经过一代代接续努力，以前贫困的人们，现在也能吃饱肚子、穿暖衣裳，有学上、有房住、有医保。全面小康、摆脱贫困是我们党给人民的交代，也是对世界的贡献。让大家过上更好生活，我们不能满足于眼前的成绩，还有很长的路要走。\n黄河安澜是中华儿女的千年期盼。近年来，我走遍了黄河上中下游9省区。无论是黄河长江“母亲河”，还是碧波荡漾的青海湖、逶迤磅礴的雅鲁藏布江；无论是南水北调的世纪工程，还是塞罕坝林场的“绿色地图”；无论是云南大象北上南归，还是藏羚羊繁衍迁徙……这些都昭示着，人不负青山，青山定不负人。\n这一年，还有很多难忘的中国声音、中国瞬间、中国故事。“请党放心、强国有我”的青春誓言，“清澈的爱、只为中国”的深情告白；“祝融”探火、“羲和”逐日、“天和”遨游星辰；运动健儿激情飞扬、奋勇争先；全国上下防控疫情坚决有力；受灾群众守望相助重建家园；人民解放军指战员、武警部队官兵矢志强军、保家卫国……无数平凡英雄拼搏奋斗，汇聚成新时代中国昂扬奋进的洪流。\n祖国一直牵挂着香港、澳门的繁荣稳定。只有和衷共济、共同努力，“一国两制”才能行稳致远。实现祖国完全统一是两岸同胞的共同心愿。真诚期盼全体中华儿女携手向前，共创中华民族美好未来。\n我同外国领导人及国际组织负责人电话沟通、视频连线时，他们多次赞扬中国抗疫和为全球疫情防控所作的贡献。截至目前，中国累计向120多个国家和国际组织提供20亿剂新冠疫苗。世界各国风雨同舟、团结合作，才能书写构建人类命运共同体的新篇章。\n再过一个多月，北京冬奥会、冬残奥会就要开幕了。让更多人参与到冰雪运动中来，这也是奥林匹克运动的题中之义。我们将竭诚为世界奉献一届奥运盛会。世界期待中国，中国做好了准备。\n新年的钟声即将敲响。我们的三位航天员正在浩瀚太空“出差”，海外同胞仍在辛勤耕耘，使领馆、中资企业等海外派驻人员和广大留学生仍在勇毅坚守，无数追梦人还在奋斗奉献。大家辛苦了，我向大家致以诚挚的新年问候！\n让我们一起向未来！祝福国泰民安！\n","id":3,"section":"posts","summary":"大家好，2022年即将到来。我在北京向大家致以新年祝福！ 回首这一年，意义非凡。我们亲历了党和国家历史上具有里程碑意义的大事。“两个一百年”奋","tags":["讲话"],"title":"习近平2022年新年贺词","uri":"https://helberg1984.github.io/2022/01/%E4%B9%A0%E8%BF%91%E5%B9%B32022%E5%B9%B4%E6%96%B0%E5%B9%B4%E8%B4%BA%E8%AF%8D/","year":"2022"},{"content":"别傻了吉他谱 ","id":4,"section":"posts","summary":"别傻了吉他谱","tags":["吉他谱"],"title":"别傻了吉他谱","uri":"https://helberg1984.github.io/2022/01/%E5%88%AB%E5%82%BB%E4%BA%86%E5%90%89%E4%BB%96%E8%B0%B1/","year":"2022"},{"content":"git配置文件在~/.gitconfig\n使用git config -l 可以查看现在的git环境详细配置\n 配置文件存储位置 /etc/gitconfig 文件：系统中对所有用户都普遍适用的配置。若使用 git config 时用 \u0026ndash;system 选项，读写的就是这个文件； ~/.gitconfig 文件：用户目录下的配置文件只适用于该用户。若使用 git config 时用 \u0026ndash;global 选项，读写的就是这个文件； 当前项目的 Git 目录中的配置文件（也就是工作目录中的 .git/config 文件）：这里的配置仅仅针对当前项目有效。每一个级别的配置都会覆盖上层的相同配置，所以 .git/config 里的配置会覆盖 /etc/gitconfig 中的同名变量； 在 Windows 系统上，Git 会找寻用户主目录下的 .gitconfig 文件。主目录即 $HOME 变量指定的目录，一般都是 C:\\Documents and Settings$USER。此外，Git 还会尝试找寻 /etc/gitconfig 文件，只不过看当初 Git 装在什么目录，就以此作为根目录来定位。  使用git config -l 可以查看现在的git环境详细配置\n 配置用户信息 当你安装Git后首先要做的事情是设置你的用户名称和邮箱地址。这两条配置很重要，每次 Git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：  Shell $ git config --global user.name \u0026quot;John Doe\u0026quot; $ git config --global user.email johndoe@example.com 1 2 $ git config --global user.name \u0026quot;John Doe\u0026quot; $ git config --global user.email johndoe@example.com  你只需要做一次这个设置，如果你传递了 \u0026ndash;global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要\u0026ndash;global选项。\n配置编辑器 Git 需要你输入一些额外消息的时候，默认会使用操作系统指定的默认编辑器，一般可能会是 Vi 或者 Vim。如果你有其他偏好，比如 Emacs 的话，可以重新设置：  Shell $ git config \u0026ndash;global core.editor emacs 1 $ git config \u0026ndash;global core.editor emacs 4. 配置密码 如果我们在安装 Git 的时候设置了密码，那么当我们做 Clone 和 Push 等操作的时候就会要求我们输入密码。显然，如果每次都这么做就太麻烦了，我们可以在配置文件中设置密码或时效已解决这样的问题：\n$ git config \u0026ndash;global credential.helper password # 存储密码 $ git config \u0026ndash;global credential.helper \u0026lsquo;cache \u0026ndash;timeout 3600\u0026rsquo; # 每次输入密码将保存3600秒，可设置为其它值 1 2 $ git config \u0026ndash;global credential.helper password # 存储密码 $ git config \u0026ndash;global credential.helper \u0026lsquo;cache \u0026ndash;timeout 3600\u0026rsquo; # 每次输入密码将保存3600秒，可设置为其它值 5. 配置比较工具 还有一个比较常用的是，在解决合并冲突时使用哪种差异分析工具：\nShell $ git config \u0026ndash;global merge.tool vimdiff # 设置vimdiff比较工具 1 $ git config \u0026ndash;global merge.tool vimdiff # 设置vimdiff比较工具 Git 可以理解 kdiff3，tkdiff，meld，xxdiff，emerge，vimdiff，gvimdiff，ecmerge，和 opendiff 等合并工具的输出信息。当然，你也可以指定使用自己开发的工具。\n查看配置 如果你想要查看配置，可以使用git config指令。config 配置有system级别 global（用户级别） 和local（当前仓库）三个 设置先从system-\u0026gt;global-\u0026gt;local 底层配置会覆盖顶层配置 分别使用\u0026ndash;system/global/local 可以定位到配置文件。  Shell $ git config \u0026ndash;system \u0026ndash;list # 查看系统配置 $ git config \u0026ndash;global \u0026ndash;list # 查看当前用户配置 $ git config \u0026ndash;local \u0026ndash;list # 查看当前仓库配置 $ git config \u0026ndash;list # 查看全部配置\n我们执行最后一条指令 $ git config \u0026ndash;list core.symlinks=false core.autocrlf=true core.fscache=true color.diff=auto color.status=auto color.branch=auto color.interactive=true 1 2 3 4 5 6 7 8 9 10 11 12 13 $ git config \u0026ndash;system \u0026ndash;list # 查看系统配置 $ git config \u0026ndash;global \u0026ndash;list # 查看当前用户配置 $ git config \u0026ndash;local \u0026ndash;list # 查看当前仓库配置 $ git config \u0026ndash;list # 查看全部配置\n我们执行最后一条指令 $ git config \u0026ndash;list core.symlinks=false core.autocrlf=true core.fscache=true color.diff=auto color.status=auto color.branch=auto color.interactive=true 有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如 /etc/gitconfig 和 ~/.gitconfig），不过最终 Git 实际采用的是最后一个。\n也可以直接查阅某个环境变量的设定，只要把特定的名字跟在后面（git config {key}）即可：\nShell $ git config user.name epins 1 2 $ git config user.name epins 7. 获取帮助 可以使用以下三种方法获得任何 Git 命令的手册页(manpage)帮助信息:\nShell $ git help \n$ git  \u0026ndash;help\n$ man git- 1 2 3 $ git help \n$ git  \u0026ndash;help\n$ man git-\n","id":5,"section":"posts","summary":"git配置文件在~/.gitconfig 使用git config -l 可以查看现在的git环境详细配置 配置文件存储位置 /etc/gitconfig 文件：系统中对所有用户都普遍适用的配","tags":["Git"],"title":"Git学习和配置","uri":"https://helberg1984.github.io/2020/12/git%E5%AD%A6%E4%B9%A0%E5%92%8C%E9%85%8D%E7%BD%AE/","year":"2020"},{"content":"","id":6,"section":"posts","summary":"","tags":null,"title":"","uri":"https://helberg1984.github.io/1/01/%E6%A8%A1%E6%9D%BF/","year":"0001"}],"tags":[{"title":"Css","uri":"https://helberg1984.github.io/tags/css/"},{"title":"Git","uri":"https://helberg1984.github.io/tags/git/"},{"title":"Html","uri":"https://helberg1984.github.io/tags/html/"},{"title":"index","uri":"https://helberg1984.github.io/tags/index/"},{"title":"Javascript","uri":"https://helberg1984.github.io/tags/javascript/"},{"title":"Markdown","uri":"https://helberg1984.github.io/tags/markdown/"},{"title":"吉他谱","uri":"https://helberg1984.github.io/tags/%E5%90%89%E4%BB%96%E8%B0%B1/"},{"title":"深坑","uri":"https://helberg1984.github.io/tags/%E6%B7%B1%E5%9D%91/"},{"title":"讲话","uri":"https://helberg1984.github.io/tags/%E8%AE%B2%E8%AF%9D/"}]}